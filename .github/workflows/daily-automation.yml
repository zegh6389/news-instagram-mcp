name: Daily News Instagram Automation

on:
  schedule:
    # Run daily at 6:00 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  daily-automation:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create logs directory
      run: mkdir -p logs
    
    - name: Run daily automation
      env:
        INSTAGRAM_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
        INSTAGRAM_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        PYTHONPATH: ${{ github.workspace }}
      run: |
        python deploy/github_automation.py
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: automation-logs-${{ github.run_number }}
        path: logs/
        retention-days: 30
    
    - name: Comment on commit (success)
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: '‚úÖ Daily automation completed successfully! üéâ'
          })
    
    - name: Comment on commit (failure)
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: '‚ùå Daily automation failed. Check the logs for details.'
          })
